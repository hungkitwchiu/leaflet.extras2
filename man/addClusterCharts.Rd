% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusterCharts.R
\name{addClusterCharts}
\alias{addClusterCharts}
\title{addClusterCharts}
\usage{
addClusterCharts(
  map,
  lng = NULL,
  lat = NULL,
  layerId = NULL,
  group = NULL,
  type = c("pie", "bar", "horizontal"),
  options = clusterchartOptions(),
  popup = NULL,
  popupOptions = NULL,
  label = NULL,
  labelOptions = NULL,
  clusterOptions = NULL,
  clusterId = NULL,
  categoryField,
  categoryMap,
  popupFields = NULL,
  popupLabels = NULL,
  markerOptions = NULL,
  legendOptions = list(title = "", position = "topright"),
  data = getMapData(map)
)
}
\arguments{
\item{map}{a map widget object created from \code{\link[leaflet]{leaflet}()}}

\item{lng}{a numeric vector of longitudes, or a one-sided formula of the form
\code{~x} where \code{x} is a variable in \code{data}; by default (if not
explicitly provided), it will be automatically inferred from \code{data} by
looking for a column named \code{lng}, \code{long}, or \code{longitude}
(case-insensitively)}

\item{lat}{a vector of latitudes or a formula (similar to the \code{lng}
argument; the names \code{lat} and \code{latitude} are used when guessing
the latitude column from \code{data})}

\item{layerId}{the layer id}

\item{group}{the name of the group the newly created layers should belong to
(for \code{\link[leaflet]{clearGroup}} and \code{\link[leaflet]{addLayersControl}} purposes).
Human-friendly group names are permitted--they need not be short,
identifier-style names. Any number of layers and even different types of
layers (e.g. markers and polygons) can share the same group name.}

\item{type}{The type of chart to use for clusters, either "pie" or "bar".}

\item{options}{Additional options for cluster charts (see \code{\link{clusterchartOptions}}).}

\item{popup}{Use the column name given in popup to collect the feature property with this name.}

\item{popupOptions}{A Vector of \code{\link[leaflet]{popupOptions}} to provide popups}

\item{label}{a character vector of the HTML content for the labels}

\item{labelOptions}{A Vector of \code{\link[leaflet]{labelOptions}} to provide label
options for each label. Default \code{NULL}}

\item{clusterOptions}{if not \code{NULL}, markers will be clustered using
\href{https://github.com/Leaflet/Leaflet.markercluster}{Leaflet.markercluster};
 you can use \code{\link[leaflet]{markerClusterOptions}()} to specify marker cluster
options}

\item{clusterId}{the id for the marker cluster layer}

\item{categoryField}{The name of the feature property used to categorize the charts.}

\item{categoryMap}{A data frame mapping categories to chart properties (label, color, icons, stroke).}

\item{popupFields}{A string or vector of strings indicating the feature properties to include in popups.}

\item{popupLabels}{A string or vector of strings indicating the labels for the popup fields.}

\item{markerOptions}{Additional options for markers (see \code{\link[leaflet:markerOptions]{markerOptions::markerOptions()}}).}

\item{legendOptions}{A list of options for the legend, including the title and position.}

\item{data}{the data object from which the argument values are derived; by
default, it is the \code{data} object provided to \code{leaflet()}
initially, but can be overridden}
}
\description{
Adds cluster charts (either pie or bar charts) to a Leaflet map.
}
\examples{
# Example usage:
library(sf)
library(geojsonsf)
library(leaflet)
library(leaflet.extras2)

data <- sf::st_as_sf(breweries91)
categories <- c("Schwer", "Mäßig", "Leicht", "kein Schaden")
data$category <- sample(categories, size = nrow(data), replace = TRUE)

## Pie Chart
leaflet() \%>\%
  addProviderTiles("CartoDB.Positron") \%>\%
  leaflet::addLayersControl(overlayGroups = "clustermarkers") \%>\%
  addClusterCharts(data = data
                   , categoryField = "category"
                   , categoryMap = data.frame(labels = categories,
                                              colors  = c("#F88", "#FA0", "#FF3", "#BFB"),
                                              strokes = "gray")
                   , group = "clustermarkers"
                   , popupFields = c("brewery", "address", "zipcode", "category")
                   , popupLabels = c("Brauerei", "Adresse", "PLZ", "Art")
                   , label = "brewery"
  )

## Bar Chart
leaflet() \%>\%
  addProviderTiles("CartoDB.Positron") \%>\%
  leaflet::addLayersControl(overlayGroups = "clustermarkers") \%>\%
  addClusterCharts(data = data
                   , type = "bar"
                   , categoryField = "category"
                   , categoryMap = data.frame(labels = categories,
                                              colors  = c("#F88", "#FA0", "#FF3", "#BFB"),
                                              strokes = "gray")
                   , group = "clustermarkers"
                   , popupFields = c("brewery", "address", "zipcode", "category")
                   , popupLabels = c("Brauerei", "Adresse", "PLZ", "Art")
                   , label = "brewery"
  )
}
